" All system-wide defaults are set in $VIMRUNTIME/debian.vim and sourced by
" the call to :runtime you can find below.  If you wish to change any of those
" settings, you should do it in this file (/etc/vim/vimrc), since debian.vim
" will be overwritten everytime an upgrade of the vim packages is performed.
" It is recommended to make changes after sourcing debian.vim since it alters
" the value of the 'compatible' option.

runtime! debian.vim

" Vim will load $VIMRUNTIME/defaults.vim if the user does not have a vimrc.
" This happens after /etc/vim/vimrc(.local) are loaded, so it will override
" any settings in these files.
" If you don't want that to happen, uncomment the below line to prevent
" defaults.vim from being loaded.
" let g:skip_defaults_vim = 1

" Uncomment the next line to make Vim more Vi-compatible
" NOTE: debian.vim sets 'nocompatible'.  Setting 'compatible' changes numerous
" options, so any other options should be set AFTER setting 'compatible'.
"set compatible

" Vim5 and later versions support syntax highlighting. Uncommenting the next
" line enables syntax highlighting by default.
if has("syntax")
  syntax on
endif

" If using a dark background within the editing area and syntax highlighting
" turn on this option as well
"set background=dark

" Uncomment the following to have Vim jump to the last position when
" reopening a file
"au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif

" Uncomment the following to have Vim load indentation rules and plugins
" according to the detected filetype.
"filetype plugin indent on

" The following are commented out as they cause vim to behave a lot
" differently from regular Vi. They are highly recommended though.
"set showcmd            " Show (partial) command in status line.
"set showmatch          " Show matching brackets.
"set ignorecase         " Do case insensitive matching
"set smartcase          " Do smart case matching
"set incsearch          " Incremental search
"set autowrite          " Automatically save before commands like :next and :make
"set hidden             " Hide buffers when they are abandoned
"set mouse=a            " Enable mouse usage (all modes)

" Source a global configuration file if available
if filereadable("/etc/vim/vimrc.local")
  source /etc/vim/vimrc.local
endif


" enable syntax highlighting and indentation for C++ files
syntax on
filetype plugin indent on

" set the C++ compiler to g++
let g:cpp_compiler = 'g++'

" set the compilation flags for C++ files
let g:cpp_compiler_flags = '-Wall -Wextra -pedantic -std=c++11'

" map the F5 key to compile the current C++ file
nnoremap <F5> :!clear && g++ % -o %< && ./%< <CR>

" enable automatic indentation when pressing Enter
set autoindent
set smartindent

" set the tab size to 4 spaces
set tabstop=4
set shiftwidth=4
set expandtab

" show line numbers and a ruler
set number
set ruler

" highlight the current line and column
set cursorline
set cursorcolumn

" enable searching with highlighting
set hlsearch

" enable the vim-lsp plugin
if executable('clangd')
    au User lsp_setup call lsp#register_server({
        \ 'name': 'clangd',
        \ 'cmd': {server_info->['clangd']},
        \ 'whitelist': ['c', 'cpp'],
        \ })
endif

" set the omnifunc option for C++ files
autocmd FileType c,cpp,lspinfo setlocal omnifunc=v:lua.vim.lsp.omnifunc

" auto-format C++ files using clang-format when saving the file
if executable('clang-format')
   autocmd FileType c ClangFormatAutoEnable
endif

call plug#begin('~/.vim/plugged')
" Add your plugins here
Plug 'prabirshrestha/vim-lsp'
Plug 'junegunn/vim-easy-align'
Plug 'kana/vim-operator-user'
Plug 'rhysd/vim-clang-format'
Plug 'sainnhe/everforest'
call plug#end()

" Add key mappings for vim-easy-align
nmap ga  <Plug>(EasyAlign)
xmap ga  <Plug>(EasyAlign)

set background=dark
colorscheme everforest
